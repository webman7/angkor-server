<?xml version="1.0" encoding="utf-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.adplatform.restApi.agency.marketers.dao.mapper.AgencyMarketersQueryMapper">
    <resultMap id="mapMy" type="com.adplatform.restApi.agency.marketers.dto.AgencyMarketersDto$Response$MarketersDetail">
        <id column="id" property="id"/>
        <result column="loginId" property="loginId"/>
        <result column="name" property="name"/>
        <result column="companyName" property="companyName"/>
        <result column="status" property="status"/>
        <result column="registrationNumber" property="registrationNumber"/>
        <result column="representationName" property="representationName"/>
        <result column="baseAddress" property="baseAddress"/>
        <result column="detailAddress" property="detailAddress"/>
        <result column="zipCode" property="zipCode"/>
        <result column="businessCategory" property="businessCategory"/>
        <result column="businessItem" property="businessItem"/>
        <result column="taxBillEmail1" property="taxBillEmail1"/>
        <result column="taxBillEmail2" property="taxBillEmail2"/>
    </resultMap>

    <sql id="mySelectQuery">
        SELECT ui.user_no AS id, ui.user_id AS loginId, ui.user_name AS name, ui.active AS status, ci.name AS companyName,
               ci.registration_number AS registrationNumber, ci.representation_name AS representationName,
               ci.base_address AS baseAddress, ci.detail_address AS detailAddress, ci.zip_code AS zipCode,
               ci.business_category AS businessCategory, ci.business_item AS businessItem,
               ci.tax_bill_email1 AS taxBillEmail1, ci.tax_bill_email2 AS taxBillEmail2
          FROM user_info ui, company_info ci
         WHERE ui.company_info_id = ci.id
           AND ui.active = 'Y'
           AND ui.company_info_id IN (
                  SELECT a.company_info_id FROM user_info a WHERE a.user_no = #{loginUserNo}
               )
           AND ci.company_type = 'AGENCY'
    </sql>

    <select id="my" resultMap="mapMy">
        <include refid="mySelectQuery"/>
    </select>

    <resultMap id="mapSearch" type="com.adplatform.restApi.agency.marketers.dto.AgencyMarketersDto$Response$Search">
        <id column="id" property="id"/>
        <result column="name" property="name"/>
    </resultMap>

    <sql id="searchSelectQuery">
        SELECT ad.id, ad.name
          FROM adaccount_info ad, adaccount_business_right_info br
         WHERE ad.id = br.adaccount_info_id
           AND br.start_date <![CDATA[ <= ]]> DATE_FORMAT(NOW(), '%Y%m%d')
           AND br.end_date <![CDATA[ >= ]]> DATE_FORMAT(NOW(), '%Y%m%d')
           AND ad.platform_type = #{request.platformType}
           AND request_user_no = #{request.userNo}
    </sql>

    <select id="search" resultMap="mapSearch">
        <include refid="searchSelectQuery"/>
    </select>

    <select id="countSearch" resultType="long">
        SELECT COUNT(*)
        FROM (<include refid="searchSelectQuery"/>) a
    </select>

    <resultMap id="mapSearchMarketers" type="com.adplatform.restApi.agency.marketers.dto.AgencyMarketersDto$Response$SearchMarketers">
        <id column="id" property="id"/>
        <result column="loginId" property="loginId"/>
        <result column="companyId" property="companyId"/>
        <result column="name" property="name"/>
        <result column="createdAt" property="createdAt"/>
        <result column="statusChangeLoginId" property="statusChangeLoginId"/>
        <result column="statusChangeLoginName" property="statusChangeLoginName"/>
        <result column="statusChangedAt" property="statusChangedAt"/>
    </resultMap>

    <sql id="searchMarketersSelectQuery">
        SELECT ui.user_no AS id, ui.user_id AS loginId, ui.company_info_id AS companyId, ui.user_name AS name, group_concat(c.name) as roles,
               ui.reg_date AS createdAt, ui.upd_date AS updatedAt,
               (SELECT a.user_id FROM user_info a WHERE a.user_no = ui.status_chg_user_no) AS statusChangeLoginId,
               (SELECT a.user_name FROM user_info a WHERE a.user_no = ui.status_chg_user_no) AS statusChangeLoginName,
               ui.status_chg_date AS statusChangedAt, ui.active AS status
          FROM user_info ui
               INNER JOIN user_roles b ON ui.user_no=b.user_no
               INNER JOIN roles_info c ON b.roles_info_id=c.id AND c.id NOT IN (1, 2)
         WHERE ui.company_info_id IN (
                  SELECT a.company_info_id FROM user_info a WHERE a.user_no = #{request.loginUserNo}
               )

        <if test="request.searchKeyword != null and !request.searchKeyword.equals('')">
            <if test="request.searchType == 'ID'">
                AND ui.user_id = #{request.searchKeyword}
            </if>
            <if test="request.searchType == 'NAME'">
                AND ui.user_name LIKE CONCAT('%', #{request.searchKeyword}, '%')
            </if>
        </if>
        <choose>
            <when test="request.agencyRoles != null and !request.agencyRoles.equals('')">
                AND ui.active = 'Y'
                <foreach collection="request.agencyRoles" item="name" open="AND c.name IN (" separator=", " close=")">
                    #{name}
                </foreach>
            </when>
            <otherwise>
                AND ui.active = #{request.status}
            </otherwise>
        </choose>
        GROUP BY ui.user_no
        ORDER BY ui.reg_date DESC
    </sql>

    <select id="searchMarketers" resultMap="mapSearchMarketers">
        <include refid="searchMarketersSelectQuery"/>
    </select>

    <select id="countSearchMarketers" resultType="long">
        SELECT COUNT(*)
        FROM (<include refid="searchMarketersSelectQuery"/>) a
    </select>

    <sql id="getUserMarketersSelectQuery">
        SELECT ui.user_no AS id, ui.user_id AS loginId, ui.company_info_id AS companyId, ui.user_name AS name, group_concat(c.name) as roles,
               ui.reg_date AS createdAt, ui.upd_date AS updatedAt,
               (SELECT a.user_id FROM user_info a WHERE a.user_no = ui.status_chg_user_no) AS statusChangeLoginId,
               (SELECT a.user_name FROM user_info a WHERE a.user_no = ui.status_chg_user_no) AS statusChangeLoginName,
               ui.status_chg_date AS statusChangedAt, ui.active AS status
          FROM user_info ui
         INNER JOIN user_roles b ON ui.user_no=b.user_no
         INNER JOIN roles_info c ON b.roles_info_id=c.id AND c.id NOT IN (1, 2)
         WHERE ui.user_no = #{userNo}
    </sql>

    <select id="getUserMarketers" resultMap="mapSearchMarketers">
        <include refid="getUserMarketersSelectQuery"/>
    </select>
</mapper>
