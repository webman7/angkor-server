<?xml version="1.0" encoding="utf-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.adplatform.restApi.domain.business.dao.account.mapper.BusinessAccountQueryMapper">
    <resultMap id="mapAccounts" type="com.adplatform.restApi.domain.business.dto.account.BusinessAccountDto$Response$Accounts">
        <id column="id" property="id"/>
        <result column="name" property="name"/>
        <result column="memberType" property="memberType"/>
        <result column="adAccountIdMaster" property="adAccountIdMaster"/>
        <result column="adAccountId" property="adAccountId"/>
        <result column="config" property="config"/>
        <result column="outOfBalance" property="outOfBalance"/>
    </resultMap>

    <sql id="accountsCondition1">
        <if test="id">
            AND a.id = #{id}
        </if>
        <if test="name">
            AND a.name LIKE CONCAT('%', #{name}, '%')
        </if>
    </sql>

    <sql id="accountsCondition2">
        <if test="id">
            AND c.business_account_info_id = #{id}
        </if>
        <if test="name">
            AND e.name LIKE CONCAT('%', #{name}, '%')
        </if>
    </sql>

    <sql id="accountsSelectQuery">
        SELECT a.id AS id, a.name AS name, b.member_type AS memberType, c.id AS adAccountIdMaster, d.id AS adAccountId, a.config, a.out_of_balance_yn AS outOfBalance
                FROM business_account_user_info b, business_account_info a LEFT JOIN (SELECT a.id AS business_account_info_id, ai.id
                                                                                        FROM business_account_info a, adaccount_info ai, adaccount_user_info au
                                                                                       WHERE a.id = ai.business_account_info_id
                                                                                         AND ai.id = au.adaccount_info_id
                                                                                         <include refid="accountsCondition1"/>
                                                                                         AND ai.config IN ('ON', 'OFF')
                                                                                         AND au.`status` = 'Y') c ON a.id = c.business_account_info_id
                                                                            LEFT JOIN (SELECT a.id AS business_account_info_id, ai.id
                                                                                         FROM business_account_info a, adaccount_info ai, adaccount_user_info au
                                                                                        WHERE a.id = ai.business_account_info_id
                                                                                          AND ai.id = au.adaccount_info_id
                                                                                          AND au.user_no = #{loginUserNo}
                                                                                         <include refid="accountsCondition1"/>
                                                                                         AND ai.config IN ('ON', 'OFF')
                                                                                         AND au.`status` = 'Y') d ON a.id = d.business_account_info_id
               WHERE a.id = b.business_account_info_id
                 AND b.user_no = #{loginUserNo}
                 <include refid="accountsCondition1"/>
                 AND a.config IN ('ON', 'OFF')
                 AND b.`status` = 'Y'
               GROUP BY a.id
        UNION
        SELECT c.business_account_info_id AS id, e.name AS name, d.member_type AS memberType, c.id AS adAccountIdMaster, c.id AS adAccountId, e.config, e.out_of_balance_yn AS outOfBalance
          FROM adaccount_info c, adaccount_user_info d, business_account_info e
         WHERE c.id = d.adaccount_info_id
           AND c.business_account_info_id = e.id
           AND d.user_no = #{loginUserNo}
           AND d.member_type = 'MEMBER'
           <include refid="accountsCondition2"/>
           AND e.config IN ('ON', 'OFF')
           AND c.config IN ('ON', 'OFF')
           AND d.`status` = 'Y'
           AND e.id NOT IN (SELECT a.id
                             FROM business_account_info a, business_account_user_info b
                            WHERE a.id = b.business_account_info_id
                              AND b.user_no = #{loginUserNo}
                              AND a.config IN ('ON', 'OFF')
                              AND b.`status` = 'Y')
        GROUP BY c.business_account_info_id
    </sql>

    <select id="accounts" resultMap="mapAccounts">
        <include refid="accountsSelectQuery"/>
        <include refid="common.sortAndOrder"/>
        <include refid="common.limitAndOffset"/>
    </select>

    <select id="countAccounts" resultType="long">
        SELECT COUNT(*)
        FROM (<include refid="accountsSelectQuery"/>) a
    </select>






    <resultMap id="mapBusinessAdAccount" type="com.adplatform.restApi.domain.business.dto.account.BusinessAccountDto$Response$BusinessAdAccount">
        <id column="id" property="id"/>
        <result column="name" property="name"/>
        <result column="adAccountId" property="adAccountId"/>
        <result column="adAccountName" property="adAccountName"/>
        <result column="config" property="config"/>
        <result column="adminStop" property="adminStop"/>
    </resultMap>

    <sql id="businessAdAccountCondition">
        <if test="searchType.equals('id')">
            <if test="!searchKeyword.equals('')">
                AND a.id = #{searchKeyword}
            </if>
        </if>
        <if test="searchType.equals('name')">
            <if test="!searchKeyword.equals('')">
                AND a.name LIKE CONCAT('%', #{searchKeyword}, '%')
            </if>
        </if>
        <if test="searchType.equals('adAccountId')">
            <if test="!searchKeyword.equals('')">
                AND b.id = #{searchKeyword}
            </if>
        </if>
        <if test="searchType.equals('adAccountName')">
            <if test="!searchKeyword.equals('')">
                AND b.name LIKE CONCAT('%', #{searchKeyword}, '%')
            </if>
        </if>
    </sql>

    <sql id="businessAdAccountSelectQuery">
        SELECT a.id AS id, a.name AS name, b.id AS adAccountId, b.name AS adAccountName, b.config AS config, b.admin_stop_yn AS adminStop
         FROM business_account_info a, adaccount_info b
        WHERE a.id = b.business_account_info_id
          <include refid="businessAdAccountCondition"/>
          AND a.config IN ('ON', 'OFF')
          AND b.config IN ('ON', 'OFF')
    </sql>

    <select id="businessAdAccount" resultMap="mapBusinessAdAccount">
        <include refid="businessAdAccountSelectQuery"/>
        <include refid="common.sortAndOrder"/>
        <include refid="common.limitAndOffset"/>
    </select>

    <select id="countBusinessAdAccount" resultType="long">
        SELECT COUNT(*)
        FROM (<include refid="businessAdAccountSelectQuery"/>) a
    </select>







    <insert id="updateRefundAccount">
        UPDATE business_account_info a, company_info b
           SET b.bank_info_id = #{request.bankId},
               b.account_number = #{request.accountNumber},
               b.account_owner = #{request.accountOwner}
         WHERE a.company_info_id = b.id
          AND a.id = #{request.businessAccountId}
    </insert>

    <insert id="updateTaxIssue">
        UPDATE business_account_tax_bill
           SET issue_status = 'Y',
               issue_user_no = #{loginUserNo},
               issue_date = NOW()
        WHERE id = #{request.id}
          AND issue_status = 'N'
    </insert>
</mapper>